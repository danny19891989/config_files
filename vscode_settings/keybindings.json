// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+alt+win+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "alt+0",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "alt+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "alt+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "alt+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "alt+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+b",
    "command": "-extension.vim_ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+a",
    "command": "-extension.vim_ctrl+a",
    "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
  },
  {
    "key": "ctrl+l",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+1",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "alt+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "ctrl+shift+2",
    "command": "-extension.vim_ctrl+shift+2",
    "when": "editorTextFocus && vim.active && vim.use<C-shift+2>"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.closeEditorsToTheRight"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.action.closeEditorsToTheLeft"
  },
  {
    "key": "ctrl+f",
    "command": "explorer.newFile",
    "when": "listFocus"
  },
  {
    "key": "ctrl+shift+f",
    "command": "explorer.newFolder",
    "when": "listFocus"
  },
  {
    "key": "shift+delete",
    "command": "-deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+alt+e",
    "command": "list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+q",
    "command": "-extension.vim_winCtrlQ",
    "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "key": "left",
    "command": "-list.collapse",
    "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
  },
  {
    "key": "shift+alt+d",
    "command": "list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+left",
    "command": "-list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+y",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+pageup",
    "command": "-workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+u",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "shift+pageup",
    "command": "-workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+,",
    "command": "workbench.action.openSettings"
  },
  {
    "key": "ctrl+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+pageup",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+pagedown",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "shift+alt+9",
    "command": "-workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "ctrl+shift+2",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+1",
    "command": "-editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replace",
    "when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+d",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+shift+4",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+shift+5",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+=",
    "command": "-increaseSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "shift+alt+a",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+o",
    "command": "editor.action.showDefinitionPreviewHover"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "alt+z",
    "command": "-workbench.action.terminal.sizeToContentWidth",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  },
  {
    "key": "shift+alt+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "ctrl+k up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "shift+alt+1",
    "command": "-workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "shift+alt+2",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "ctrl+k right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "shift+f3",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+f3",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+alt+u",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+pagedown",
    "command": "-workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "shift+pagedown",
    "command": "-workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+alt+0",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+alt+i",
    "command": "workbench.action.terminal.unsplit",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "enter",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "ctrl+f3",
    "command": "-editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+f3",
    "command": "-editor.action.previousSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "escape",
    "command": "-workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "escape",
    "command": "-editor.action.webvieweditor.hideFind",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "escape",
    "command": "-search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "f6",
    "command": "workbench.action.focusNextPart"
  },
  {
    "key": "f6",
    "command": "-workbench.action.focusNextPart"
  },
  {
    "key": "shift+f6",
    "command": "workbench.action.focusPreviousPart"
  },
  {
    "key": "shift+f6",
    "command": "-workbench.action.focusPreviousPart"
  },
  {
    "key": "alt+l",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "accessibilityModeEnabled && terminalFocus"
  },
  {
    "key": "ctrl+alt+t",
    "command": "workbench.action.positionPanelRight"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.positionPanelBottom"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "home",
    "command": "-notifications.focusFirstToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "escape",
    "command": "-notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "escape",
    "command": "-notifications.hideToasts",
    "when": "notificationToastsVisible"
  },
  {
    "key": "ctrl+alt+g",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "shift+alt+j",
    "command": "notifications.toggleList"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+f",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+e",
    "command": "list.scrollDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+down",
    "command": "-list.scrollDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+y",
    "command": "list.scrollUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+up",
    "command": "-list.scrollUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-extension.newAREPLSession",
    "when": "!inQuickOpen && !terminalFocus"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-sqlite.runDocumentQuery",
    "when": "editorLangId =~ /(sql|sqlite)/"
  },
  {
    "key": "alt+6",
    "command": "-workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+m",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "ctrl+c",
    "command": "-workbench.action.terminal.copyAndClearSelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "alt+7",
    "command": "-workbench.action.openEditorAtIndex7"
  },
  {
    "key": "f2",
    "command": "-workbench.action.terminal.renameInstance",
    "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
  },
  {
    "key": "ctrl+shift+f2",
    "command": "-editor.action.linkedEditing",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+t",
    "command": "-extension.vim_ctrl+t",
    "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
  },
  {
    "key": "ctrl+shift+7",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.terminal.openDetectedLink",
    "when": "terminalFocus && terminalHasBeenCreated"
  },
  {
    "key": "ctrl+alt+6",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-search.action.restrictSearchToFolder",
    "when": "folderMatchWithResourceFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "left ctrl+alt",
    "command": "list.collapseAllToFocus"
  },
  {
    "key": "ctrl+k ctrl+shift+\\",
    "command": "-notebook.cell.split",
    "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "key": "ctrl+k ctrl+shift+\\",
    "command": "-workbench.action.joinEditorInGroup",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "ctrl+k ctrl+shift+\\",
    "command": "-workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+f",
    "command": "workbench.action.terminal.rename"
  },
  {
    "key": "ctrl+k ctrl+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "ctrl+k ctrl+alt+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "ctrl+alt+.",
    "command": "extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l alt+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-extension.currentAREPLSession",
    "when": "!inQuickOpen && !terminalFocus"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationToastsVisible"
  },
  {
    "key": "ctrl+alt+8",
    "command": "workbench.action.terminal.openNativeConsole"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+k ctrl+shift+c",
    "command": "-copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+shift+c",
    "command": "-copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+c",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+c",
    "command": "-editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "ctrl+c",
    "command": "-filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "ctrl+shift+c",
    "command": "problems.action.copy",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+c",
    "command": "-problems.action.copy",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "alt+l alt+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.quickOpenView"
  },
  {
    "key": "alt+r",
    "command": "-toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+r",
    "command": "-workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+r",
    "command": "-toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "alt+r",
    "command": "-toggleSearchRegex",
    "when": "searchViewletFocus"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+4",
    "command": "workbench.action.terminal.clear"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-rust-analyzer.joinLines",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "ctrl+shift+6",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "shift+alt+0",
    "command": "-workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "ctrl+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.toggleFullScreen",
    "when": "!isIOS"
  },
  {
    "key": "f11",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "ctrl+f11",
    "command": "-workbench.action.debug.stepIntoTarget",
    "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f11",
    "command": "workbench.action.toggleTabsVisibility"
  },
  {
    "key": "f8 =",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "f8 -",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "pagedown",
    "command": "-selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+pageup",
    "command": "-selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "pageup",
    "command": "-selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+i",
    "command": "-inlineChat.start",
    "when": "inlineChatHasProvider && !editorReadonly"
  },
  {
    "key": "ctrl+i",
    "command": "-focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+i",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+i",
    "command": "-extension.vim_ctrl+i",
    "when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.terminal.goToRecentDirectory",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g",
    "command": "-extension.vim_ctrl+g",
    "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showSubtypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showSupertypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
  },
  {
    "key": "ctrl+shift+u",
    "command": "-rust-analyzer.parentModule",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "shift+alt+.",
    "command": "-editor.action.autoFix",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "shift+alt+s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+k ctrl+shift+s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "-references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showIncomingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showOutgoingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.terminal.searchWorkspace",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "ctrl+f",
    "command": "-extension.vim_ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "h",
    "command": "-list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "j",
    "command": "-list.focusDown",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "j",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "g g",
    "command": "-list.focusFirst",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+g",
    "command": "-list.focusLast",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "k",
    "command": "-list.focusUp",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "k",
    "command": "-list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "-list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+alt+1",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "ctrl+k left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "o",
    "command": "-list.toggleExpand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+c",
    "command": "-extension.vim_ctrl+c",
    "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
  },
  {
    "key": "ctrl+v",
    "command": "-extension.vim_ctrl+v",
    "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
  },
  {
    "key": "ctrl+h",
    "command": "-extension.vim_ctrl+h",
    "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
  },
  {
    "key": "ctrl+f",
    "command": "-settings.action.search",
    "when": "inSettingsEditor"
  },
  {
    "key": "alt+z",
    "command": "redo"
  },
  {
    "key": "ctrl+shift+z",
    "command": "-redo"
  },
  {
    "key": "ctrl+k ctrl+b",
    "command": "-editor.action.setSelectionAnchor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+k ctrl+shift+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-workbench.action.terminal.selectToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+left",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+3",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-chat.action.askQuickQuestion",
    "when": "hasChatProvider"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "shift+enter",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "ctrl+alt+k",
    "command": "workbench.output.action.clearOutput"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.files.saveFiles"
  },
  {
    "key": "ctrl+d",
    "command": "-list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "delete",
    "command": "-deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+k ctrl+d",
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+m",
    "command": "-extension.vim_ctrl+m",
    "when": "editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+alt+f",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f2",
    "command": "-renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+alt+g",
    "command": "workbench.action.increaseViewWidth"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.action.increaseViewHeight"
  },
  {
    "key": "ctrl+shift+v",
    "command": "workbench.action.decreaseViewHeight"
  },
  {
    "key": "ctrl+alt+v",
    "command": "workbench.action.decreaseViewWidth"
  },
  {
    "key": "shift+delete",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "shift+alt+3",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "shift+alt+4",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "f8 b",
    "command": "workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "f8 u",
    "command": "workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "f8 l",
    "command": "workbench.action.terminal.resizePaneRight"
  },
  {
    "key": "f8 j",
    "command": "workbench.action.terminal.resizePaneDown"
  },
  {
    "key": "f8 k",
    "command": "workbench.action.terminal.resizePaneUp"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.quickchat.toggle",
    "when": "hasChatProvider"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+8",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "f8 '",
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditor"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "shift+alt+r",
    "command": "workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+up",
    "command": "-workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "shift+alt+t",
    "command": "workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "alt+n",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "alt+m",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "code-runner.stop"
  },
  {
    "key": "ctrl+alt+m",
    "command": "-code-runner.stop"
  },
  {
    "key": "alt+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "ctrl+k ctrl+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "f8 h",
    "command": "workbench.action.terminal.resizePaneLeft"
  },
  {
    "key": "ctrl+shift+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+alt+win+j",
    "command": "-notebook.cell.joinAbove",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.action.terminal.openDetectedLink",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "left",
    "command": "-breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "left",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "left",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "pagedown",
    "command": "-list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "left",
    "command": "list.collapse",
    "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "editor.action.selectAll"
  },
  {
    "key": "ctrl+a",
    "command": "-editor.action.selectAll"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationFocus"
  },
  {
    "key": "f8",
    "command": "-run.selection.ahk",
    "when": "editorLangId == 'ahk'"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "alt+s",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "escape",
    "command": "-extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "f10",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-jupyter.runByLine",
    "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'"
  },
  {
    "key": "f10",
    "command": "-jupyter.runByLineNext",
    "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
  },
  {
    "key": "f12",
    "command": "-editor.gotoNextSymbolFromResult",
    "when": "hasSymbols"
  },
  {
    "key": "ctrl+x",
    "command": "workbench.action.terminal.copyAndClearSelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "ctrl+c",
    "command": "-workbench.action.terminal.copyAndClearSelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "alt+y",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "shift+f3",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+a",
    "command": "workbench.action.terminal.selectAll"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationFocus || notificationToastsVisible"
  },
  {
    "key": "shift+alt+g",
    "command": "workbench.action.openGlobalSettings"
  },
  {
    "key": "shift+alt+d",
    "command": "-notebook.cell.detectLanguage",
    "when": "notebookCellEditable && notebookEditable"
  },
  {
    "key": "shift+alt+d",
    "command": "-editor.detectLanguage",
    "when": "editorTextFocus && !notebookEditable"
  },
  {
    "key": "shift+alt+f1",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode"
  },
  {
    "key": "ctrl+e",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "shift+alt+h",
    "command": "workbench.action.files.toggleActiveEditorReadonlyInSession"
  },
  {
    "key": "f1",
    "command": "-document.open",
    "when": "editorLangId == 'ahk'"
  },
  {
    "key": "shift+alt+d",
    "command": "workbench.action.terminal.scrollToTop",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+home",
    "command": "-workbench.action.terminal.scrollToTop",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+m",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "ctrl+alt+j",
    "command": "workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+shift+u",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "shift+alt+i",
    "command": "workbench.action.toggleSeparatePinnedEditorTabs"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.splitActiveTab",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+alt+i",
    "command": "-workbench.action.chat.open",
    "when": "chatPanelParticipantRegistered"
  },
  {
    "key": "ctrl+alt+i",
    "command": "-workbench.panel.chat",
    "when": "workbench.panel.chat.view.copilot.active"
  },
  {
    "key": "ctrl+alt+7",
    "command": "revealFileInOS"
  },
  {
    "key": "shift+alt+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "key": "ctrl+k ctrl+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "shift+alt+q",
    "command": "workbench.action.joinAllGroups"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-workbench.action.keybindingsReference"
  },
  {
    "key": "shift+alt+b",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "ctrl+k shift+enter",
    "command": "-workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "shift+alt+u",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "ctrl+k shift+enter",
    "command": "-workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
  },
  {
    "key": "alt+o",
    "command": "editor.action.goToTypeDefinition"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "ctrl+alt+q",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+f",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "enter",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "ctrl+shift+f",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "alt+j",
    "command": "editor.action.focusNextCursor"
  },
  {
    "key": "alt+k",
    "command": "editor.action.focusPreviousCursor"
  },
  {
    "key": "alt+h",
    "command": "editor.action.addSelectionToPreviousFindMatch"
  },
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+0",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+0",
    "command": "editor.action.insertLineBefore"
  },
  {
    "key": "ctrl+alt+b",
    "command": "workbench.action.terminal.openDetectedLink"
  },
  {
    "key": "shift+alt+e",
    "command": "workbench.action.terminal.selectToNextCommand"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "f3",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "alt+i",
    "command": "editor.action.moveSelectionToNextFindMatch"
  },
  {
    "key": "alt+u",
    "command": "editor.action.moveSelectionToPreviousFindMatch"
  },
  {
    "key": "shift+alt+n",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+m",
    "command": "editor.action.marker.nextInFiles"
  },
  {
    "key": "ctrl+y",
    "command": "-redo"
  },
  {
    "key": "ctrl+alt+p",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+shift+2",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "escape",
    "command": "-notifications.hideToasts",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.openPreviousEditorFromHistory"
  },
  {
    "key": "shift+alt+k",
    "command": "notifications.clearAll"
  },
  {
    "key": "ctrl+shift+h",
    "command": "editor.action.formatDocument.multiple"
  },
  {
    "key": "shift+alt+v",
    "command": "workbench.action.toggleLightDarkThemes"
  },
  {
    "key": "ctrl+alt+5",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.navigateBackInEditLocations"
  },
  {
    "key": "shift+alt+f",
    "command": "editor.action.autoFix"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "alt+left",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "alt+right",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.terminal.suggestToggleDetails",
    "when": "simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.chat.startVoiceChat",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
  },
  {
    "key": "ctrl+i",
    "command": "-inlineChat.start",
    "when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.terminal.chat.start",
    "when": "chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+k z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+alt+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+shift+j",
    "command": "editor.action.formatDocument"
  },
  {
    "key": "ctrl+shift+k",
    "command": "python.execInTerminal-icon"
  }
]
